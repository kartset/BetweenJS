<h1>
BetweenJS v.0.9.9
</h1>
Tweening Engine for JS


Requires :
 - Type.js (OOP Class System)

+ AMD compatible


Tested Browsers : IE7+  /  FF 15 + / CHR 15 + / SAF 4+ / OP 18+

(API will be ready soon, since it changed a little from older versions, working on it, sorry...)
All that states in original AS3 API is implemented

Original AS3 Project & API
Highly inspired from BetweenAS3 (author:yossy(at)be-interactive.org), 

http://www.libspark.org/wiki/BetweenAS3/en

Update Log v 0.9.9 :
- removed Type and Pkg, to enclude them as dependancies, it's simply better
- definitively removed Tween Events, since it is not that primordial, using callbacks works, but would have either heavy the code with crossbrowser event implementation
- fixed issue concerning freezing in complex Bezier tweens with Back.easeOut and .easeInOut easings.
- implemeted crossbrowser alpha/opacity feature for DOMElements
- fixed color system, as tweening both color and background-color would make only one of the two work.
- color system : No More BetweenJS.colormode = HSV, feature still exists, in smarter way.
  - all color tweens will end up eventually converted in RGB, since there are no native HSV implementations.
  - BetweenJS.Colors.HEXtoRGB, HEXtoHSV, RGBtoHSV, HSVtoRGB methods are now public for external use.
  - color values ca now be expressed in various clean ways :
    - 0xFF3300 (as Number)
    - '#FF3300' (css HEX)
    - '#F30' (css shortcut for HEX)
    - 'rgb(255, 51, 0)' (rgb declaration)
    - 'hsv(12, 100, 100)' (hsv declaration)
    - {r:255, g:51, b:0} (object declaration with inner (nested) tweenable values as any other nested tweenables)
    - 'chartreuse', 'aliceblue', 'red', 'gold', or 'green', ... (native css-name shortcuts)
  - 'color-background' can be simply called as 'background' like in css.
- removed hoist function names that conflicted apparently with some IE<9 internals

Update Log v 0.9.8 :
- Includes Type & Pkg

Update Log v 0.9.7 :
- No more event handling in this framework, no need for a half-feature,
since we're trying to optimize calculations, base tweens should not be EventDispatcher
when simple closures are way lighter.
In a close future, a module will be done in StrawExpress, that will overload Tweens 
to make them EventDispatchers if still needed.


Update Log v 0.9.6 :
- Changed Class system again, no closures, more simple and readable --> quicker
- Fixed -Nothing happening- bug on Safari with span-like Elements.
- Fixed critical error at loading in Evt implementation from Naja Framework.



Update Log v 0.9.5

- Works on all kind of objects (DOM Elements included)
- All units available
- Lighter class system
- Color (hex, rgb & hsv)
- scrollLeft/scrollTop properties
- custom tween & easing interfaces available

